name: MERN Stack CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      # Backend tests
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci
      
      - name: Create Backend .env file
        run: |
          cd backend
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "PORT=5000" >> .env
      
      # Frontend tests
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Lint Frontend
        run: |
          cd frontend
          npm run lint
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            frontend/dist
            backend
          retention-days: 1
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      
      - name: Show directory structure for debugging
        run: |
          echo "Root directory:"
          ls -la
          echo "Frontend dist directory:"
          ls -la frontend/dist
          echo "Backend directory:"
          ls -la backend
      
      - name: Copy backend and built frontend to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            backend
            frontend/dist
          target: /home/ubuntu/CICD
      
      - name: SSH into EC2 and restart app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/CICD/backend
            npm ci --production
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            echo "PORT=5000" >> .env
            pm2 restart mern-app || pm2 start index.js --name mern-app
            
            # Verify deployment
            sleep 5
            pm2 status
            curl -s http://localhost:5000/
